{"ast":null,"code":"var _jsxFileName = \"/Users/ines.hilz/Documents/GitHub/react_three_fiber_test_1/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport './App.scss';\n\n//import canvas from react three fiber\nimport { Canvas, useFrame } from 'react-three-fiber';\n//import { Box } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SpinningMesh = _ref => {\n  _s();\n  let {\n    position,\n    color,\n    args\n  } = _ref;\n  const mesh = useRef(null);\n  useFrame(() => mesh.current.rotation.x = mesh.current.rotation.y += 0.01);\n  return /*#__PURE__*/_jsxDEV(\"mesh\", {\n    position: position,\n    ref: mesh,\n    children: [/*#__PURE__*/_jsxDEV(\"boxBufferGeometry\", {\n      attach: \"geometry\",\n      args: args\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n      attach: \"material\",\n      color: color\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(SpinningMesh, \"aboyJ/StuJfvpd16sdbtizo3yWA=\", false, function () {\n  return [useFrame];\n});\n_c = SpinningMesh;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Canvas, {\n      colorManagement: true,\n      camera: {\n        position: [-5, 2, 10],\n        fov: 60\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"ambientLight\", {\n        intensity: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        intensity: 0.5,\n        position: [-10, 0, -20]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        intensity: 1.5,\n        position: [0, -10, 0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"directionalLight\", {\n        intensity: 1,\n        position: [0, 10, 0],\n        \"shadow-mapSize-width\": 1024,\n        \"shadow-mapSize-height\": 1024,\n        \"shadow-camera-far\": 50,\n        \"shadow-camera-left\": -10,\n        \"shadow-camera-rigth\": 10,\n        \"shadow-camera-top\": 10,\n        \"shadow-camera-bottom\": -10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"group\", {\n        children: /*#__PURE__*/_jsxDEV(\"mesh\", {\n          children: /*#__PURE__*/_jsxDEV(\"planeBufferGeometry\", {\n            attach: \"geometry\",\n            args: [100, 100]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SpinningMesh, {\n        position: [0, 1, 0],\n        color: \"lightblue\",\n        args: [3, 2, 1]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SpinningMesh, {\n        position: [-2, 1, -5],\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(SpinningMesh, {\n        position: [5, 1, -2],\n        color: \"pink\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"SpinningMesh\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useRef","Canvas","useFrame","SpinningMesh","position","color","args","mesh","current","rotation","x","y","App","fov"],"sources":["/Users/ines.hilz/Documents/GitHub/react_three_fiber_test_1/src/App.js"],"sourcesContent":["import React, {useRef} from 'react';\nimport './App.scss';\n\n//import canvas from react three fiber\nimport { Canvas, useFrame } from 'react-three-fiber';\n//import { Box } from '@react-three/drei';\n\n\nconst SpinningMesh = ({position, color, args}) => {\n  const mesh = useRef(null)\n  useFrame(() => (mesh.current.rotation.x = mesh.current.rotation.y += 0.01));\n\n  return (\n    <mesh position={position} ref={mesh}>\n      <boxBufferGeometry attach='geometry' args={args}/>\n      <meshStandardMaterial attach='material' color={color}/>\n    </mesh>\n  )\n}\n\n\n\n\n\nfunction App() {\n\n  return ( \n  <>\n  <Canvas colorManagement camera={{position: [-5, 2, 10], fov: 60}}>\n    <ambientLight intensity={0.3} />\n    <pointLight intensity={0.5} position={[-10, 0, -20]}/>\n    <pointLight intensity={1.5} position={[0, -10, 0]}/>\n    <directionalLight intensity={1} position={[0,10,0]} \n    shadow-mapSize-width={1024} \n    shadow-mapSize-height={1024} \n    shadow-camera-far={50}\n    shadow-camera-left={-10}\n    shadow-camera-rigth={10}\n    shadow-camera-top={10}\n    shadow-camera-bottom={-10}\n    />\n\n    <group>\n      <mesh>\n        <planeBufferGeometry attach='geometry' args={[100,100]}/>\n      </mesh>\n    </group>\n\n\n\n\n    <SpinningMesh position={[0,1,0]} color={\"lightblue\"} args={[3,2,1]}/>\n    <SpinningMesh position={[-2,1,-5]} color={\"pink\"} />\n    <SpinningMesh position={[5,1,-2]} color={\"pink\"}/>\n  </Canvas>\n  </>);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,QAAO,OAAO;AACnC,OAAO,YAAY;;AAEnB;AACA,SAASC,MAAM,EAAEC,QAAQ,QAAQ,mBAAmB;AACpD;AAAA;AAAA;AAGA,MAAMC,YAAY,GAAG,QAA6B;EAAA;EAAA,IAA5B;IAACC,QAAQ;IAAEC,KAAK;IAAEC;EAAI,CAAC;EAC3C,MAAMC,IAAI,GAAGP,MAAM,CAAC,IAAI,CAAC;EACzBE,QAAQ,CAAC,MAAOK,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACC,CAAC,GAAGH,IAAI,CAACC,OAAO,CAACC,QAAQ,CAACE,CAAC,IAAI,IAAK,CAAC;EAE3E,oBACE;IAAM,QAAQ,EAAEP,QAAS;IAAC,GAAG,EAAEG,IAAK;IAAA,wBAClC;MAAmB,MAAM,EAAC,UAAU;MAAC,IAAI,EAAED;IAAK;MAAA;MAAA;MAAA;IAAA,QAAE,eAClD;MAAsB,MAAM,EAAC,UAAU;MAAC,KAAK,EAAED;IAAM;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAClD;AAEX,CAAC;AAAA,GAVKF,YAAY;EAAA,QAEhBD,QAAQ;AAAA;AAAA,KAFJC,YAAY;AAgBlB,SAASS,GAAG,GAAG;EAEb,oBACA;IAAA,uBACA,QAAC,MAAM;MAAC,eAAe;MAAC,MAAM,EAAE;QAACR,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;QAAES,GAAG,EAAE;MAAE,CAAE;MAAA,wBAC/D;QAAc,SAAS,EAAE;MAAI;QAAA;QAAA;QAAA;MAAA,QAAG,eAChC;QAAY,SAAS,EAAE,GAAI;QAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACtD;QAAY,SAAS,EAAE,GAAI;QAAC,QAAQ,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACpD;QAAkB,SAAS,EAAE,CAAE;QAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAE;QACnD,wBAAsB,IAAK;QAC3B,yBAAuB,IAAK;QAC5B,qBAAmB,EAAG;QACtB,sBAAoB,CAAC,EAAG;QACxB,uBAAqB,EAAG;QACxB,qBAAmB,EAAG;QACtB,wBAAsB,CAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QACxB,eAEF;QAAA,uBACE;UAAA,uBACE;YAAqB,MAAM,EAAC,UAAU;YAAC,IAAI,EAAE,CAAC,GAAG,EAAC,GAAG;UAAE;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA;MACpD;QAAA;QAAA;QAAA;MAAA,QACD,eAKR,QAAC,YAAY;QAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAE;QAAC,KAAK,EAAE,WAAY;QAAC,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAE,eACrE,QAAC,YAAY;QAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAE;QAAC,KAAK,EAAE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eACpD,QAAC,YAAY;QAAC,QAAQ,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAE;QAAC,KAAK,EAAE;MAAO;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3C,iBACN;AACL;AAAC,MAhCQD,GAAG;AAkCZ,eAAeA,GAAG;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}